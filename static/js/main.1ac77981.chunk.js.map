{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","username","name","email","id","className","alt","src","CardList","robots","length","map","robot","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","res","json","users","filteredSearchfields","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAYeA,EAVF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACnC,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAKL,EAAUM,IAAG,+BAA0BH,EAA1B,cACvB,6BAAKF,IACL,4BAAIC,QCgBDK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OAAIA,EAAOC,OAIH,8BACKD,EAAOE,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,CAEIR,GAAIQ,EAAMR,GACVF,KAAMU,EAAMV,KACZC,MAAOS,EAAMT,MACbF,SAAUW,EAAMX,UAJXW,EAAMR,SANpB,oBAAIC,UAAU,MAAd,6BCUAQ,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAQ,SAArE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,+BAI3B,OAAGG,KAAKJ,MAAMC,SACH,oBAAItB,UAAU,MAAd,yCAEAyB,KAAKX,MAAMK,a,GAhBFQ,aC6CbC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAcD,EAAME,OAAOC,SAb3C,EAAKZ,MAAQ,CACXjB,OAAS,GACT2B,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAASkC,S,+BAOlC,IAAD,EACyBb,KAAKJ,MAA7BjB,EADD,EACCA,OAAQ2B,EADT,EACSA,YACVQ,EAAuBnC,EAAOoC,QAAO,SAAAjC,GACzC,OAAOA,EAAMV,KAAK4C,cAAcC,SAASX,EAAYU,kBAGvD,OAAQrC,EAAOC,OAGV,sBAAKL,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,WAPzB,sBAAKvC,UAAU,SAAf,cAAyB,mD,GA1Bd2B,cCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAChDX,M","file":"static/js/main.1ac77981.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ username, name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt={username} src={`https://robohash.org/${id}?200x200`} />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    if(!robots.length) {\r\n        return <h1 className='pa5'>no robot found</h1>\r\n    } else {\r\n        return (\r\n            <div>\r\n                {robots.map(robot => \r\n                    <Card \r\n                        key={robot.id} \r\n                        id={robot.id} \r\n                        name={robot.name} \r\n                        email={robot.email} \r\n                        username={robot.username} \r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid #333', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError : true });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1 className='pa5'>oops... there some problem.</h1>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots : [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ robots : users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield : event.target.value });\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredSearchfields = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    \n    return !robots.length ?\n      (<div className='tc pa5'> <h1>loading...</h1></div>)\n      : \n        (<div className='tc'>\n          <h1 className='f1' >robofriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll >\n            <ErrorBoundary>\n              <CardList robots={filteredSearchfields}/>\n            </ErrorBoundary>\n          </Scroll>\n        </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport './index.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}